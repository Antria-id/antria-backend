// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ANTRIA
model Pelanggan {
  id              Int       @default(autoincrement()) @id
  username        String    @unique
  password        String
  email           String    @unique
  emailVerified   Boolean   @default(false)
  profile_picture String    @default("")
  nama            String
  handphone       String    @default("")
  alamat          String    @default("")
  review          Review[]
  pesanan         Pesanan[]
  chat            Chat[]
  wallet          Int       @default(0)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
}

model Mitra {
  id              Int         @default(autoincrement()) @id
  nama_toko       String
  deskripsi_toko  String
  alamat          String
  linkGmaps       String      @default("")
  hari_buka       String
  jam_buka        String
  jam_tutup       String
  gambar_toko     String      @default("")
  subscription    Boolean     @default(false)
  review          Review[]
  produk_layanan  Produk[]
  order           Pesanan[]
  karyawan        Karyawan[]
  chat            Chat[]
  status_toko     StatusToko  @default(OPEN)
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
}

// model Sektor {
//   id              Int     @default(autoincrement()) @id
//   nama_sektor     String
// }

// model Kategori {

// }

model Produk {
  id                Int       @default(autoincrement()) @id
  nama_produk       String
  deskripsi_produk  String
  harga             Int
  gambar            String    @default("default.png")
  kuantitas         Int       @default(10)
  mitra             Mitra     @relation(fields: [mitraId], references: [id])
  mitraId           Int
  orderList         OrderList[]
  show_produk       Boolean   @default(true)
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
}

model OrderList {
  id        Int     @default(autoincrement()) @id
  quantity  Int     @default(1)
  note      String  @default("")
  pesanan   Pesanan @relation(fields: [pesananId], references: [invoice])
  produk    Produk  @relation(fields: [produkId], references: [id])
  produkId  Int
  pesananId String
}

//  invoice format : INVC-GA1-RO2-131026032024
// INVC-GA-1-RO2-131026032024
// 2 huruf awal toko + id
// 2 huruf awal pelanggan + id
// jam menit tanggal bulan tahun
// INVCGA1RO2131026032024

model Pesanan {
  invoice     String        @id
  payment     Payment
  pemesanan   OrderType?    @default(ONLINE)
  takeaway    Boolean       @default(false)
  status      PaymentStatus @default(PENDING)
  oderlist    OrderList[]
  pelanggan   Pelanggan     @relation(fields: [pelangganId], references: [id])
  pelangganId Int
  mitra       Mitra         @relation(fields: [mitraId], references: [id])
  mitraId     Int
  antrian     Antrian?
  antrianId   Int?
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
}

// user input order list -> isi informasi pesanan -> pesan

// insert tabel pesanan -> bind orderlist to pesanan and mitra -> assign antrian

model Antrian {
  id          Int         @default(autoincrement()) @id
  estimasi    Int?
  orderstatus OrderStatus @default(WAITING)
  pesanan     Pesanan?    @relation(fields: [pesananId], references: [invoice])
  pesananId   String?     @unique
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
}

model Karyawan {
  id              Int       @default(autoincrement()) @id
  username        String    @unique
  password        String
  email           String    @unique
  profile_picture String    @default("")
  nama            String
  handphone       String    @default("")
  alamat          String    @default("")
  isOwner         Boolean   @default(false)
  mitra           Mitra     @relation(fields: [mitraId], references: [id])
  mitraId         Int
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
}

model Review {
  komentar    String
  rating      Int
  mitra       Mitra     @relation(fields: [mitraId], references: [id])
  mitraId     Int
  reviewer    Pelanggan @relation(fields: [pelangganId], references: [id])
  pelangganId Int
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@id([mitraId,pelangganId])
}

model Chat {
  id          Int        @default(autoincrement()) @id
  message     String
  attachment  String?
  pelanggan   Pelanggan? @relation(fields: [pelangganId], references: [id])
  pelangganId Int?
  mitra       Mitra      @relation(fields: [mitraId], references: [id])
  mitraId     Int
  isRead      Boolean
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Analytic {
  id    Int     @default(autoincrement()) @id
}

enum Payment {
  EWALLET
  CASH
}

enum OrderStatus {
  ALLDONE
  CONFIRM
  PROCESS
  WAITING
  CANCELED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum OrderType {
  ONLINE
  OFFLINE
}

enum StatusToko {
  OPEN
  CLOSE
  FULL
}




